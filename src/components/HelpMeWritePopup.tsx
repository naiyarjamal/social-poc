import { useTranslation } from "react-i18next";
import {
  Dialog,
  DialogTitle,
  DialogContent,
  DialogActions,
  Button,
  Typography,
  Box,
  IconButton,
  Paper,
  Slide,
  useTheme,
} from "@mui/material";
import {
  AutoAwesome,
  CheckCircle,
  Edit,
  Close,
  Cancel,
} from "@mui/icons-material";
import type { TransitionProps } from "@mui/material/transitions";
import { forwardRef } from "react";

const Transition = forwardRef(function Transition(
  props: TransitionProps & {
    children: React.ReactElement<any, any>;
  },
  ref: React.Ref<unknown>
) {
  return <Slide direction="up" ref={ref} {...props} />;
});

interface HelpMeWritePopupProps {
  field: string;
  suggestion: string;
  onAccept: () => void;
  onEdit: () => void;
  onDiscard: () => void;
}

const HelpMeWritePopup: React.FC<HelpMeWritePopupProps> = ({
  suggestion,
  onAccept,
  onEdit,
  onDiscard,
}) => {
  const { t } = useTranslation();
  const theme = useTheme();

  return (
    <Dialog
      open={true}
      TransitionComponent={Transition}
      keepMounted
      onClose={onDiscard}
      aria-describedby="ai-suggestion-dialog"
      maxWidth="md"
      fullWidth
      PaperProps={{
        sx: {
          borderRadius: 3,
          minHeight: "300px",
        },
      }}
    >
      <DialogTitle sx={{ pb: 2 }}>
        <Box sx={{ display: "flex", alignItems: "center", gap: 1.5 }}>
          <AutoAwesome sx={{ color: "primary.main", fontSize: "1.5rem" }} />
          <Typography
            variant="h6"
            component="div"
            sx={{ flexGrow: 1, fontWeight: 600 }}
          >
            {t("helpMeWrite")} - AI Suggestion
          </Typography>
          <IconButton
            aria-label="close"
            onClick={onDiscard}
            sx={{
              color: "grey.500",
              "&:hover": { color: "grey.700" },
            }}
          >
            <Close />
          </IconButton>
        </Box>
      </DialogTitle>

      <DialogContent dividers sx={{ py: 3 }}>
        <Paper
          elevation={0}
          sx={{
            p: 3,
            backgroundColor:
              theme.palette.mode === "dark"
                ? "rgba(255, 255, 255, 0.05)"
                : "grey.50",
            border: "1px solid",
            borderColor:
              theme.palette.mode === "dark"
                ? "rgba(255, 255, 255, 0.12)"
                : "grey.200",
            borderRadius: 2,
          }}
        >
          <Typography
            variant="body1"
            sx={{
              lineHeight: 1.7,
              fontSize: "1rem",
              color: "text.primary",
              whiteSpace: "pre-wrap",
            }}
          >
            {suggestion}
          </Typography>
        </Paper>
        <Typography
          variant="caption"
          color="text.secondary"
          sx={{ mt: 2, display: "block" }}
        >
          This suggestion was generated by AI. Please review and modify as
          needed.
        </Typography>
      </DialogContent>

      <DialogActions sx={{ p: 3, gap: 1 }}>
        <Button
          onClick={onDiscard}
          variant="outlined"
          startIcon={<Cancel />}
          sx={{
            borderColor: "error.main",
            color: "error.main",
            "&:hover": {
              borderColor: "error.dark",
              backgroundColor: "error.50",
            },
          }}
        >
          {t("discard")}
        </Button>
        <Button
          onClick={onEdit}
          variant="outlined"
          startIcon={<Edit />}
          sx={{
            borderColor: "warning.main",
            color: "warning.main",
            "&:hover": {
              borderColor: "warning.dark",
              backgroundColor: "warning.50",
            },
          }}
        >
          {t("edit")}
        </Button>
        <Button
          onClick={onAccept}
          variant="contained"
          startIcon={<CheckCircle />}
          sx={{
            background: "linear-gradient(45deg, #4caf50 30%, #66bb6a 90%)",
            "&:hover": {
              background: "linear-gradient(45deg, #388e3c 30%, #4caf50 90%)",
              transform: "translateY(-1px)",
              boxShadow: "0 6px 20px rgba(76, 175, 80, 0.3)",
            },
            transition: "all 0.2s ease-in-out",
          }}
        >
          {t("accept")}
        </Button>
      </DialogActions>
    </Dialog>
  );
};

export default HelpMeWritePopup;
